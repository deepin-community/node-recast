Description: workaround tsc update
Author: Yadd <yadd@debian.org>
Forwarded: not-needed
Last-Update: 2023-11-02

--- a/lib/printer.ts
+++ b/lib/printer.ts
@@ -3150,6 +3150,7 @@
     | types.namedTypes.StringLiteral
     | types.namedTypes.RegExpLiteral
     | types.namedTypes.BigIntLiteral
+// @ts-ignore
     | types.namedTypes.DecimalLiteral,
 ): string | void {
   const value = types.getFieldValue(node, "value");
--- a/test/ecmascript.ts
+++ b/test/ecmascript.ts
@@ -144,6 +144,7 @@
           "Parsing should have failed: " + JSON.stringify(source),
         );
       } catch (err: any) {
+// @ts-ignore
         assert.strictEqual(err.message, "Line 1: " + expectedMessage);
       }
     }
--- a/test/printer.ts
+++ b/test/printer.ts
@@ -2420,6 +2420,7 @@
     assert.strictEqual(pretty, code);
 
     types.visit(ast, {
+// @ts-ignore
       visitStaticBlock(path) {
         assert.strictEqual(path.get("body", "length").value, 2);
         while (path.get("body").shift()) {}
@@ -2485,7 +2486,9 @@
     assert.strictEqual(pretty, expectedPretty);
 
     types.visit(ast, {
+// @ts-ignore
       visitImportAttribute(path) {
+// @ts-ignore
         this.traverse(path);
         const valuePath = path.get("value");
         const strLit = valuePath.value;
--- a/test/typescript.ts
+++ b/test/typescript.ts
@@ -537,12 +537,14 @@
           .toString(),
       );
     } catch (e2: any) {
+      //@ts-ignore
       if (e2.code !== "ENOENT") {
         console.error(e2);
       }
       throw e1;
     }
 
+    //@ts-ignore
     if (options.throws === e1.message) {
       return null;
     }
